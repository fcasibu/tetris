import { TetrominoType, type Rotation } from '@shared/types/game.types';

// prettier-ignore
const SHAPES: Record<TetrominoType, Record<Rotation, [number, number][]>> = {
  [TetrominoType.I]: {
    0: [[0, 1], [1, 1], [2, 1], [3, 1]],
    90: [[1, 0], [1, 1], [1, 2], [1, 3]],
    180: [[0, 1], [1, 1], [2, 1], [3, 1]],
    270: [[1, 0], [1, 1], [1, 2], [1, 3]],
  },
 
  [TetrominoType.O]: {
    0: [[0, 0], [1, 0], [0, 1], [1, 1]],
    90: [[0, 0], [1, 0], [0, 1], [1, 1]],
    180: [[0, 0], [1, 0], [0, 1], [1, 1]],
    270: [[0, 0], [1, 0], [0, 1], [1, 1]],
  },

  [TetrominoType.T]: {
    0: [[0, 1], [1, 1], [2, 1], [1, 0]],
    90: [[1, 0], [1, 1], [1, 2], [0, 1]],
    180: [[0, 1], [1, 1], [2, 1], [1, 2]],
    270: [[1, 0], [1, 1], [1, 2], [2, 1]],
  },

  [TetrominoType.S]: {
    0: [[1, 0], [2, 0], [0, 1], [1, 1]],
    90: [[1, 0], [1, 1], [2, 1], [2, 2]],
    180: [[1, 0], [2, 0], [0, 1], [1, 1]],
    270: [[1, 0], [1, 1], [2, 1], [2, 2]],
  },

  [TetrominoType.Z]: {
    0: [[0, 0], [1, 0], [1, 1], [2, 1]],
    90: [[1, 0], [1, 1], [2, 1], [2, 2]],
    180: [[0, 0], [1, 0], [1, 1], [2, 1]],
    270: [[1, 0], [1, 1], [2, 1], [2, 2]],
  },

  [TetrominoType.J]: {
    0: [[0, 1], [1, 1], [2, 1], [2, 0]],
    90: [[1, 0], [1, 1], [1, 2], [0, 2]],
    180: [[0, 1], [1, 1], [2, 1], [0, 2]],
    270: [[1, 0], [1, 1], [1, 2], [2, 0]],
  },

  [TetrominoType.L]: {
    0: [[0, 1], [1, 1], [2, 1], [0, 0]],
    90: [[1, 0], [1, 1], [1, 2], [2, 2]],
    180: [[0, 1], [1, 1], [2, 1], [2, 2]],
    270: [[1, 0], [1, 1], [1, 2], [0, 0]],
  },
} as const;

export function getTetrominoShape(type: TetrominoType, rotation: Rotation) {
  return SHAPES[type][rotation];
}
